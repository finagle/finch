/*
 * Copyright 2015 Vladimir Kostyukov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.finch.petstore

import argonaut.Argonaut._
import argonaut.CodecJson

/**
 * Represents a User in the system, who can interact with the petstore and purchase
 * available [[Pet]] objects.
 * @param id Unique, autogenerated ID of the User
 * @param username (Required)
 * @param firstName
 * @param lastName
 * @param email
 * @param password (Required)
 * @param phone
 */
case class User(
    id: Option[Long],
    username: String,
    firstName: Option[String],
    lastName: Option[String],
    email: Option[String],
    password: String,
    phone: Option[String]
    )

/**
 * Companion object to the User class.
 */
object User{
  /**
   * Creates the encode/decode codec for the User object.
   */
  implicit val userCodec: CodecJson[User] =
    casecodec7(User.apply, User.unapply)("id", "username", "firstName", "lastName", "email", "password", "phone")
}
